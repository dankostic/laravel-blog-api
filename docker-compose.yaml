version: "3.8"

services:
  server:
    image: "nginx:stable-alpine"
    container_name: laravel_blog_api_nginx
    ports:
      - "483:80"
    volumes:
      - .:/var/www/html
      - ./dockerfiles/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - laravel_blog_api_network
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: laravel_blog_api_php
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - mysql
    networks:
      - laravel_blog_api_network
  mysql:
    image: mysql:8.1.0
    container_name: laravel_blog_api_mysql
    ports:
      - "3317:3306"
    env_file:
      - ./dockerfiles/env/mysql.env
    volumes:
      - datavolume:/var/lib/mysql
    networks:
      - laravel_blog_api_network
  phpmyadmin:
    image: phpmyadmin
    container_name: laravel_blog_api_phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
    restart: always
    ports:
      - "984:80"
    networks:
      - laravel_blog_api_network
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    container_name: laravel_blog_api_composer
    volumes:
      - .:/var/www/html
    networks:
      - laravel_blog_api_network
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: laravel_blog_api_artisan
    volumes:
      - .:/var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel_blog_api_network
  npm:
    image: node:16
    working_dir: /var/www/html
    entrypoint: ['npm']
    container_name: laravel_blog_api_npm
    volumes:
      - .:/var/www/html
    networks:
      - laravel_blog_api_network
networks:
  laravel_blog_api_network:
    name: laravel_blog_api_network
    driver: bridge
volumes:
  datavolume:
